version: '3'

volumes:
    prometheus_data: {}
    grafana_data: {}

services:
  prometheus2kafka:
    image: "confluentinc/prometheus2kafka"
    build: 
      context: ./remote_write/
    ports:
      - "9201:9201"
  zookeeper:
    image: "confluentinc/cp-zookeeper:5.5.3"
    hostname: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka-broker-1:
    image: "confluentinc/cp-kafka:5.5.3"
    hostname: kafka-broker-1
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_ADVERTISED_HOST_NAME: localhost
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://localhost:9092'
      KAFKA_DELETE_TOPIC_ENABLE: 'true'
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      CONFLUENT_METRICS_ENABLE: 'false'

  kafdrop:
    image: obsidiandynamics/kafdrop
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka-broker-1:9092"
      JVM_OPTS: "-Xms32M -Xmx464"
    depends_on:
      - "kafka-broker-1"

  prometheus:
    image: prom/prometheus
    hostname: prometheus
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - 9090:9090
    restart: always

  node-exporter:
    image: prom/node-exporter
    hostname: node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
    command: 
      - '--path.procfs=/host/proc' 
      - '--path.sysfs=/host/sys'
      - '--web.disable-exporter-metrics'
      - '--collector.disable-defaults'
      - '--log.level=warn'
      - '--collector.cpu'
    ports:
      - 9100:9100
    restart: always

  grafana:
    image: grafana/grafana
    hostname: grafana
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    volumes:
      - grafana_data:/var/lib/grafana
    restart: always